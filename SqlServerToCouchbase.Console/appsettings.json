{
  "SqlServer": {
    "ConnectionString": "Server=localhost;Database=AdventureWorks2016;Trusted_Connection=True;"
  },
  "CouchbaseServer": {
    "ConnectionString": "couchbase://localhost",
    "Username": "Administrator",
    "Password": "password",
    "Bucket": "AdventureWorks2016",
    "TargetBucketRamQuotaMB": 1024,
    "DefaultUserPassword": "Change*This*Password*123"
  },
  "UseSchemaForScope": true,
  "UseDefaultScopeForDboSchema": true,
  "TableNameToCollectionMapping": {
    "ProductModelProductDescriptionCulture": "ProductModelProductDescCult",

    "Production_ProductListPriceHistory": "Production_ProductListPrHist",
    "Production_ProductModelIllustration": "Production_ProductModelIllus",
    "Production_ProductModelProductDescriptionCulture": "Production_ProdMoProdDesCult",
    "Production_TransactionHistoryArchive": "Production_TransactHisArch",
    "HumanResources_EmployeeDepartmentHistory": "HumanResources_EmpDeptHist",
    "HumanResources_EmployeePayHistory": "HumanResources_EmpPayHistory",
    "Sales_SalesOrderHeaderSalesReason": "Sales_SalesOrderHeadSalRea"
  },
  "Instructions": {
    "ValidateNames": true,
    "CreateBucket": true,
    "CreateCollections": true,
    "CreateUsers": false,
    "CreateData": true,
    "CreateIndexes": false,
    "Denormalize": true
  },
  "Sampling": {
    "SampleIndexes": false,
    "SampleData": false
  },
  "DenormalizeMaps": [
    {
      "Type": "OneToOne",
      "From": {
        "SchemaName": "Person",
        "TableName": "PhoneNumberType"
      },
      "To": {
        "SchemaName": "Person",
        "TableName": "PersonPhone",
        "ForeignKeyNames": [ "PhoneNumberTypeID" ],
        "RemoveForeignKey": false,
        "Unnest": true,
        "UnnestSeparator": "_"
      }
    },
    {
      "Type": "ManyToOne",
      "From": {
        "SchemaName": "Person",
        "TableName": "PersonPhone",
        "ForeignKeyNames": [ "BusinessEntityID" ]
      },
      "To": {
        "SchemaName": "Person",
        "TableName": "Person"
      }
    },    
    {
      "Type": "ManyToOne",
      "From": {
        "SchemaName": "Person",
        "TableName": "EmailAddress",
        "ForeignKeyNames": [ "BusinessEntityID" ]
      },
      "To": {
        "SchemaName": "Person",
        "TableName": "Person"
      }
    }
  ]
}
